pipeline {
    agent any
    environment {
        VENV = 'venv'
    }
    stages {
        stage('Debug Environment') {
            steps {
                sh '''
                    echo "Working directory:"
                    pwd
                    echo "Directory contents:"
                    ls -la
                    echo "Messaging app contents:"
                    ls -la messaging_app/ || echo "messaging_app directory not found"
                    python3 --version
                    pip3 --version
                '''
            }
        }

        stage('Set Up Environment') {
            steps {
                sh '''
                    python3 -m pip install --upgrade pip
                    python3 -m pip install -r messaging_app/requirements.txt
                    python3 -m pip install pytest pytest-django
                '''
            }
        }

        stage('Run Tests') {
            steps {
                sh '''
                    mkdir -p messaging_app/reports
                    cd messaging_app
                    python3 -m pytest --junitxml=reports/test-report.xml
                '''
            }
        }

        stage('Archive Reports') {
            steps {
                archiveArtifacts artifacts: 'messaging_app/reports/test-report.xml', allowEmptyArchive: true
            }
        }
    }

    post {
        always {
            node('') {
                junit testResults: 'messaging_app/reports/test-report.xml', skipPublishingChecks: true
            }
        }
        failure {
            echo 'Build failed! Check test reports.'
        }
    }
}