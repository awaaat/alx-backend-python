name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        db: [ postgres, mysql ]

    services:
      postgres:
        if: ${{ matrix.db == 'postgres' }}
        image: postgres:latest
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      mysql:
        if: ${{ matrix.db == 'mysql' }}
        image: mysql:latest
        env:
          MYSQL_USER: testuser
          MYSQL_PASSWORD: testpass
          MYSQL_DATABASE: testdb
          MYSQL_ROOT_PASSWORD: rootpass
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping -h localhost -u root -p$MYSQL_ROOT_PASSWORD"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r messaging_app/requirements.txt
          pip install psycopg2-binary mysqlclient

      - name: Run Django tests
        env:
          DATABASE_URL: ${{ matrix.db == 'postgres' && 'postgres://testuser:testpass@localhost:5432/testdb' || 'mysql://testuser:testpass@localhost:3306/testdb' }}
        run: |
          cd messaging_app
          python manage.py migrate
          python manage.py test
